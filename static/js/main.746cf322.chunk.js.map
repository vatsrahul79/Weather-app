{"version":3,"sources":["components/UserLocation/UserLocation.js","components/Chart.jsx","components/DisplayData/DisplayData.jsx","components/Searchbar/Searchbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserLocation","useState","loaded","coordinates","lat","lng","location","setLocation","onSuccess","coords","latitude","longitude","onError","error","useEffect","navigator","code","message","geolocation","getCurrentPosition","Root","withStyles","root","display","margin","flexDirection","name","classes","restProps","className","Label","label","whiteSpace","Area","props","Path","path","area","x","arg","y1","val","y0","startVal","curve","curveCatmullRom","WeatherChart","this","data","console","log","Paper","chart","factory","scalePoint","valueField","argumentField","seriesComponent","position","rootComponent","labelComponent","React","paddingRight","dayjs","extend","advancedFormat","useStyles","makeStyles","bullet","transform","title","fontSize","pos","marginBottom","DisplayData","loading","hourlyData","setDateStamp","changeFormat","dates","dateObject","Date","dated","format","daily","map","all","i","Card","xs","onClick","current","dt","CardContent","Typography","variant","component","color","Math","floor","temp","day","src","icon","weather","alt","main","Searchbar","cityData","setCityData","city","setCity","setLoading","dateStamp","setHourlyData","lon","Api_key","isActive","fetch","then","res","json","catch","err","hourly","Container","fixed","placeholder","onChange","e","value","target","handleChange","type","coord","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.746cf322.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst UserLocation = () => {\n    const [location, setLocation ] = useState({\n        loaded:false,\n        coordinates:{ lat:\"\",lng:\"\" } \n    })\n\n    const onSuccess = (location) =>{\n        setLocation({\n            loaded:true,\n            coordinates:{\n                lat:location.coords.latitude,\n                lng:location.coords.longitude,\n            },\n        })\n    }\n\n    const onError = error =>{\n        setLocation({\n            loaded:true,\n          error,\n        })\n    }\n\n    useEffect(()=>{\n        if(!(\"geolocation\" in navigator)){\n            onError({\n                code:0,\n                message:\"Geolocation not supported\"\n            })\n        }\n        navigator.geolocation.getCurrentPosition(onSuccess,onError)\n    },[])\n    return {location, setLocation};\n};\n\nexport default UserLocation;","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Chart,\n  ArgumentAxis,\n  ValueAxis,\n  AreaSeries,\n  Legend,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\nimport {\n  curveCatmullRom,\n  area,\n} from 'd3-shape';\nimport { scalePoint } from 'd3-scale';\n\nconst legendStyles = () => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n});\nconst legendRootBase = ({ classes, ...restProps }) => (\n  <Legend.Root {...restProps} className={classes.root} />\n);\nconst Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\nconst legendLabelStyles = () => ({\n  label: {\n    whiteSpace: 'nowrap',\n  },\n});\nconst legendLabelBase = ({ classes, ...restProps }) => (\n  <Legend.Label className={classes.label} {...restProps} />\n);\nconst Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\nconst demoStyles = () => ({\n  chart: {\n    paddingRight: '20px',\n  },\n});\n\nconst Area = props => (\n  <AreaSeries.Path\n    {...props}\n    path={area()\n      .x(({ arg }) => arg)\n      .y1(({ val }) => val)\n      .y0(({ startVal }) => startVal)\n      .curve(curveCatmullRom)}\n  />\n);\n\n\nclass WeatherChart extends React.PureComponent {\n  render() {\n    const { classes,data } = this.props;\n    console.log(data)\n    return (\n      <Paper>\n        <Chart\n          data={data}\n          className={classes.chart}\n        >\n          <ArgumentScale factory={scalePoint} />\n          <ArgumentAxis />\n          {/* <ValueAxis /> */}\n\n          <AreaSeries\n            name=\"Weather Report\"\n            valueField=\"temp\"\n            argumentField=\"dt\"\n            seriesComponent={Area}\n          />\n\n          <Animation />\n          <Legend position=\"bottom\" rootComponent={Root} labelComponent={Label} />\n        </Chart>\n        <div className=\"row mr-5\">\n                    {/* <div  className=\"col-6  bg-primary\">\n                        <h4 className=\"\">Pressure</h4>\n                        <p className=\"\"><b>{Math.floor(data.current.pressure)}</b></p>\n                    </div>\n                    <div className=\"col-6 bg-primary\">\n                        <h4 className=\"\">Humidity</h4>\n                        <p><b>{Math.floor(data.current.humidity)}%</b></p>\n                    </div> */}\n                </div>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(demoStyles, { name: 'Demo' })(WeatherChart);\n","import React from 'react';\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport dayjs from \"dayjs\";\nimport WeatherChart from '../Chart'\nimport './DisplayData.css'\ndayjs.extend(advancedFormat)\n\nconst useStyles = makeStyles({\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nconst DisplayData = (props) => {\n    const classes = useStyles();\n    const { data, loading ,hourlyData, setDateStamp } = props\n\n    \n    \n    const changeFormat = (dates) => {\n        const milliseconds = dates * 1000 \n        const dateObject = new Date(milliseconds)\n        const dated = dayjs(dateObject).format('ddd')\n        return `${dated}`;\n    };\n\n    if (loading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    const iconUrl = (icon) => `http://openweathermap.org/img/wn/${icon}.png`\n    return (\n        <div>\n            <div className=\"row\">\n                {data ? data.daily.map((all, i) => {\n                    return (\n                        <div key={i} className=\"col d-flex card\">\n                            <Card xs={2} className={classes.root} onClick={()=>setDateStamp(data.current.dt)}>\n                                <CardContent>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        {changeFormat(all.dt)}\n                                    </Typography>\n                                    <Typography className={classes.pos} variant=\"h5\" color=\"textSecondary\">\n                                        {Math.floor(all.temp.day - 273.15)}\n                                        <sup>o</sup>C\n                                    </Typography>\n                                    <img src={iconUrl(all.weather[0].icon)} alt=\"weather\" />\n                                    <Typography variant=\"body2\" component=\"p\">\n                                        {all.weather[0].main}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n\n                        </div>\n                    )\n                }) : null}\n            </div>\n            <div className=\"mt-4\">\n                <WeatherChart data={hourlyData} />\n            </div>\n        </div>\n    )\n};\n\nexport default DisplayData;","import React, { useState, useEffect } from 'react';\nimport './Searchbar.css';\nimport { Container } from \"@material-ui/core\";\nimport UserLocation from '../UserLocation/UserLocation'\nimport DisplayData from '../DisplayData/DisplayData'\nimport { Forum } from '@material-ui/icons';\n\nconst Searchbar = () => {\n  const [cityData, setCityData] = useState([])\n  const [city, setCity] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const { location, setLocation } = UserLocation()\n  const [dateStamp, setDateStamp] = useState('')\n  const [hourlyData, setHourlyData] = useState([])\n  const [searchLocation, setSearchLocation] = useState({\n    loading: false,\n    coordinates: {\n      lat: \"\",\n      lon: \"\"\n    }\n  })\n\n  const Api_key = 'c609afff11a2dedc1d4d3770928b8fe0'\n  useEffect(() => {\n    let isActive = true\n    setLoading(true)\n    if (location.coordinates.lng && location.coordinates.lat) {\n      fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${location.coordinates.lat}&lon=${location.coordinates.lng}&appid=${Api_key}`)\n        .then(res => res.json())\n        .then((data) => {\n          if (isActive) {\n            setCityData(data)\n            setDateStamp(data.current.dt)\n            setLoading(false)\n          }\n        })\n        .catch((err) => console.log(err));\n\n      return () => {\n        isActive = false\n      }\n    }\n  }, [location.coordinates.lng, location.coordinates.lat])\n\n\n  const handleChange = (e) => {\n    const { value } = e.target\n    setCity(value)\n  }\n  useEffect(() => {\n    setLoading(true)\n    let isActive = true\n    setLoading(true)\n    if (dateStamp && isActive) {\n      fetch(`http://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${location.coordinates.lat}&lon=${location.coordinates.lng}&dt=${dateStamp}&appid=${Api_key}`)\n        .then(res => res.json())\n        .then((data) => {\n          setLoading(false)\n          setHourlyData(data.hourly)\n        })\n        .catch((err) => console.log(err))\n    }\n\n    return () => {\n      isActive = false\n    }\n\n  }, [dateStamp])\n\n\n  function handleClick() {\n    setLoading(false)\n    fetch(`https://api.openweathermap.org/data/2.5/weather?appid=${Api_key}&q=${city}`)\n      .then(res => res.json())\n      .then((data) => data)\n      .then(data => {\n        setLocation({\n          loaded: true,\n          coordinates: {\n            lat: data.coord.lat,\n            lng: data.coord.lon,\n          },\n        })\n      })\n      .catch((err) => console.log(err));\n\n  }\n  console.log(location);\n\n  if (!location.loaded) {\n    return <div className=\"loader\"></div>;\n  }\n\n  return (\n    <Container fixed>\n      <div className=\"searchbar\">\n        <div className=\"searchbar-header\">\n        </div>\n        <div className=\"searchbar-search\">\n          <div className=\"searchbar-searchContainer\">\n            <i className=\"material-icons\">location_on</i>\n            <input placeholder=\"Search by location\" onChange={(e) => handleChange(e)} value={city} type=\"text\" />\n            <div><i className=\"fa fa-search\" onClick={handleClick}></i></div>\n          </div>\n        </div>\n        <div className=\"mt-2\">\n          {cityData.length !== 0 ? cityData && <DisplayData data={cityData} setDateStamp={setDateStamp} loading={loading} hourlyData={hourlyData} /> : null}\n        </div>\n      </div>\n    </Container>\n  )\n};\n\nexport default Searchbar;","import React from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Searchbar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}